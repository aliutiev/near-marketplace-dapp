{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BrowserLocalStorageKeyStore = void 0;\n\nconst keystore_1 = require(\"./keystore\");\n\nconst key_pair_1 = require(\"../utils/key_pair\");\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\n\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n  /**\n   * @param localStorage defaults to window.localStorage\n   * @param prefix defaults to `near-api-js:keystore:`\n   */\n  constructor() {\n    let localStorage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.localStorage;\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : LOCAL_STORAGE_KEY_PREFIX;\n    super();\n    this.localStorage = localStorage;\n    this.prefix = prefix;\n  }\n  /**\n   * Stores a {@link KeyPair} in local storage.\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   * @param keyPair The key pair to store in local storage\n   */\n\n\n  async setKey(networkId, accountId, keyPair) {\n    this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n  }\n  /**\n   * Gets a {@link KeyPair} from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   * @returns {Promise<KeyPair>}\n   */\n\n\n  async getKey(networkId, accountId) {\n    const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n\n    if (!value) {\n      return null;\n    }\n\n    return key_pair_1.KeyPair.fromString(value);\n  }\n  /**\n   * Removes a {@link KeyPair} from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the key pair\n   */\n\n\n  async removeKey(networkId, accountId) {\n    this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n  }\n  /**\n   * Removes all items that start with `prefix` from local storage\n   */\n\n\n  async clear() {\n    for (const key of this.storageKeys()) {\n      if (key.startsWith(this.prefix)) {\n        this.localStorage.removeItem(key);\n      }\n    }\n  }\n  /**\n   * Get the network(s) from local storage\n   * @returns {Promise<string[]>}\n   */\n\n\n  async getNetworks() {\n    const result = new Set();\n\n    for (const key of this.storageKeys()) {\n      if (key.startsWith(this.prefix)) {\n        const parts = key.substring(this.prefix.length).split(':');\n        result.add(parts[1]);\n      }\n    }\n\n    return Array.from(result.values());\n  }\n  /**\n   * Gets the account(s) from local storage\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @returns{Promise<string[]>}\n   */\n\n\n  async getAccounts(networkId) {\n    const result = new Array();\n\n    for (const key of this.storageKeys()) {\n      if (key.startsWith(this.prefix)) {\n        const parts = key.substring(this.prefix.length).split(':');\n\n        if (parts[1] === networkId) {\n          result.push(parts[0]);\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @hidden\n   * Helper function to retrieve a local storage key\n   * @param networkId The targeted network. (ex. default, betanet, etc…)\n   * @param accountId The NEAR account tied to the storage keythat's sought\n   * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n   */\n\n\n  storageKeyForSecretKey(networkId, accountId) {\n    return `${this.prefix}${accountId}:${networkId}`;\n  }\n  /** @hidden */\n\n\n  *storageKeys() {\n    for (let i = 0; i < this.localStorage.length; i++) {\n      yield this.localStorage.key(i);\n    }\n  }\n\n}\n\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;","map":{"version":3,"names":["Object","defineProperty","exports","value","BrowserLocalStorageKeyStore","keystore_1","require","key_pair_1","LOCAL_STORAGE_KEY_PREFIX","KeyStore","constructor","localStorage","window","prefix","setKey","networkId","accountId","keyPair","setItem","storageKeyForSecretKey","toString","getKey","getItem","KeyPair","fromString","removeKey","removeItem","clear","key","storageKeys","startsWith","getNetworks","result","Set","parts","substring","length","split","add","Array","from","values","getAccounts","push","i"],"sources":["C:/Projects/node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrowserLocalStorageKeyStore = void 0;\nconst keystore_1 = require(\"./keystore\");\nconst key_pair_1 = require(\"../utils/key_pair\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    async setKey(networkId, accountId, keyPair) {\n        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    async getKey(networkId, accountId) {\n        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n        if (!value) {\n            return null;\n        }\n        return key_pair_1.KeyPair.fromString(value);\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    async removeKey(networkId, accountId) {\n        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    async clear() {\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                this.localStorage.removeItem(key);\n            }\n        }\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    async getNetworks() {\n        const result = new Set();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                result.add(parts[1]);\n            }\n        }\n        return Array.from(result.values());\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    async getAccounts(networkId) {\n        const result = new Array();\n        for (const key of this.storageKeys()) {\n            if (key.startsWith(this.prefix)) {\n                const parts = key.substring(this.prefix.length).split(':');\n                if (parts[1] === networkId) {\n                    result.push(parts[0]);\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}