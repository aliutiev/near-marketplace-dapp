{"ast":null,"code":"var FrameStringSource = require(\"./FrameStringSource\"),\n    FrameStringParser = require(\"./FrameStringParser\"),\n    cache = require(\"u3\").cache,\n    prepareStackTrace = require(\"../prepareStackTrace\");\n\nmodule.exports = function () {\n  Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\n    var warnings;\n    var frameShifts = [captureStackTrace];\n\n    if (terminator) {\n      // additional frames can come here if arguments.callee.caller is supported\n      // otherwise it is hard to identify the terminator\n      frameShifts.push(terminator);\n    }\n\n    var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\n    Object.defineProperties(throwable, {\n      stack: {\n        configurable: true,\n        get: cache(function () {\n          var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\n          return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n        })\n      },\n      cachedStack: {\n        configurable: true,\n        writable: true,\n        enumerable: false,\n        value: true\n      }\n    });\n  };\n\n  Error.getStackTrace = function (throwable) {\n    if (throwable.cachedStack) return throwable.stack;\n    var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\n        frames = [],\n        warnings;\n    if (frameStrings) frames = FrameStringParser.getInstance().getFrames(frameStrings, []);else warnings = [\"The stack is not readable by unthrown errors in this environment.\"];\n    var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\n    if (frameStrings) try {\n      Object.defineProperties(throwable, {\n        stack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: stack\n        },\n        cachedStack: {\n          configurable: true,\n          writable: true,\n          enumerable: false,\n          value: true\n        }\n      });\n    } catch (nonConfigurableError) {}\n    return stack;\n  };\n\n  return {\n    prepareStackTrace: prepareStackTrace\n  };\n};","map":{"version":3,"names":["FrameStringSource","require","FrameStringParser","cache","prepareStackTrace","module","exports","Error","captureStackTrace","throwable","terminator","warnings","frameShifts","push","captured","getInstance","captureFrameStrings","Object","defineProperties","stack","configurable","get","frames","getFrames","frameStrings","functionValues","cachedStack","writable","enumerable","value","getStackTrace","getFrameStrings","nonConfigurableError"],"sources":["C:/Projects/near-marketplace-dapp/near-marketplace/node_modules/error-polyfill/lib/non-v8/index.js"],"sourcesContent":["var FrameStringSource = require(\"./FrameStringSource\"),\r\n    FrameStringParser = require(\"./FrameStringParser\"),\r\n    cache = require(\"u3\").cache,\r\n    prepareStackTrace = require(\"../prepareStackTrace\");\r\n\r\nmodule.exports = function () {\r\n\r\n    Error.captureStackTrace = function captureStackTrace(throwable, terminator) {\r\n        var warnings;\r\n        var frameShifts = [\r\n            captureStackTrace\r\n        ];\r\n        if (terminator) {\r\n            // additional frames can come here if arguments.callee.caller is supported\r\n            // otherwise it is hard to identify the terminator\r\n            frameShifts.push(terminator);\r\n        }\r\n        var captured = FrameStringSource.getInstance().captureFrameStrings(frameShifts);\r\n        Object.defineProperties(throwable, {\r\n            stack: {\r\n                configurable: true,\r\n                get: cache(function () {\r\n                    var frames = FrameStringParser.getInstance().getFrames(captured.frameStrings, captured.functionValues);\r\n                    return (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n                })\r\n            },\r\n            cachedStack: {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: false,\r\n                value: true\r\n            }\r\n        });\r\n    };\r\n\r\n    Error.getStackTrace = function (throwable) {\r\n        if (throwable.cachedStack)\r\n            return throwable.stack;\r\n        var frameStrings = FrameStringSource.getInstance().getFrameStrings(throwable),\r\n            frames = [],\r\n            warnings;\r\n        if (frameStrings)\r\n            frames = FrameStringParser.getInstance().getFrames(frameStrings, []);\r\n        else\r\n            warnings = [\r\n                \"The stack is not readable by unthrown errors in this environment.\"\r\n            ];\r\n        var stack = (Error.prepareStackTrace || prepareStackTrace)(throwable, frames, warnings);\r\n        if (frameStrings)\r\n            try {\r\n                Object.defineProperties(throwable, {\r\n                    stack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: stack\r\n                    },\r\n                    cachedStack: {\r\n                        configurable: true,\r\n                        writable: true,\r\n                        enumerable: false,\r\n                        value: true\r\n                    }\r\n                });\r\n            } catch (nonConfigurableError) {\r\n            }\r\n        return stack;\r\n    };\r\n\r\n    return {\r\n        prepareStackTrace: prepareStackTrace\r\n    };\r\n};"],"mappings":"AAAA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qBAAD,CAA/B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAD/B;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAAC,IAAD,CAAP,CAAcE,KAF1B;AAAA,IAGIC,iBAAiB,GAAGH,OAAO,CAAC,sBAAD,CAH/B;;AAKAI,MAAM,CAACC,OAAP,GAAiB,YAAY;EAEzBC,KAAK,CAACC,iBAAN,GAA0B,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCC,UAAtC,EAAkD;IACxE,IAAIC,QAAJ;IACA,IAAIC,WAAW,GAAG,CACdJ,iBADc,CAAlB;;IAGA,IAAIE,UAAJ,EAAgB;MACZ;MACA;MACAE,WAAW,CAACC,IAAZ,CAAiBH,UAAjB;IACH;;IACD,IAAII,QAAQ,GAAGd,iBAAiB,CAACe,WAAlB,GAAgCC,mBAAhC,CAAoDJ,WAApD,CAAf;IACAK,MAAM,CAACC,gBAAP,CAAwBT,SAAxB,EAAmC;MAC/BU,KAAK,EAAE;QACHC,YAAY,EAAE,IADX;QAEHC,GAAG,EAAElB,KAAK,CAAC,YAAY;UACnB,IAAImB,MAAM,GAAGpB,iBAAiB,CAACa,WAAlB,GAAgCQ,SAAhC,CAA0CT,QAAQ,CAACU,YAAnD,EAAiEV,QAAQ,CAACW,cAA1E,CAAb;UACA,OAAO,CAAClB,KAAK,CAACH,iBAAN,IAA2BA,iBAA5B,EAA+CK,SAA/C,EAA0Da,MAA1D,EAAkEX,QAAlE,CAAP;QACH,CAHS;MAFP,CADwB;MAQ/Be,WAAW,EAAE;QACTN,YAAY,EAAE,IADL;QAETO,QAAQ,EAAE,IAFD;QAGTC,UAAU,EAAE,KAHH;QAITC,KAAK,EAAE;MAJE;IARkB,CAAnC;EAeH,CA1BD;;EA4BAtB,KAAK,CAACuB,aAAN,GAAsB,UAAUrB,SAAV,EAAqB;IACvC,IAAIA,SAAS,CAACiB,WAAd,EACI,OAAOjB,SAAS,CAACU,KAAjB;IACJ,IAAIK,YAAY,GAAGxB,iBAAiB,CAACe,WAAlB,GAAgCgB,eAAhC,CAAgDtB,SAAhD,CAAnB;IAAA,IACIa,MAAM,GAAG,EADb;IAAA,IAEIX,QAFJ;IAGA,IAAIa,YAAJ,EACIF,MAAM,GAAGpB,iBAAiB,CAACa,WAAlB,GAAgCQ,SAAhC,CAA0CC,YAA1C,EAAwD,EAAxD,CAAT,CADJ,KAGIb,QAAQ,GAAG,CACP,mEADO,CAAX;IAGJ,IAAIQ,KAAK,GAAG,CAACZ,KAAK,CAACH,iBAAN,IAA2BA,iBAA5B,EAA+CK,SAA/C,EAA0Da,MAA1D,EAAkEX,QAAlE,CAAZ;IACA,IAAIa,YAAJ,EACI,IAAI;MACAP,MAAM,CAACC,gBAAP,CAAwBT,SAAxB,EAAmC;QAC/BU,KAAK,EAAE;UACHC,YAAY,EAAE,IADX;UAEHO,QAAQ,EAAE,IAFP;UAGHC,UAAU,EAAE,KAHT;UAIHC,KAAK,EAAEV;QAJJ,CADwB;QAO/BO,WAAW,EAAE;UACTN,YAAY,EAAE,IADL;UAETO,QAAQ,EAAE,IAFD;UAGTC,UAAU,EAAE,KAHH;UAITC,KAAK,EAAE;QAJE;MAPkB,CAAnC;IAcH,CAfD,CAeE,OAAOG,oBAAP,EAA6B,CAC9B;IACL,OAAOb,KAAP;EACH,CAhCD;;EAkCA,OAAO;IACHf,iBAAiB,EAAEA;EADhB,CAAP;AAGH,CAnED"},"metadata":{},"sourceType":"script"}