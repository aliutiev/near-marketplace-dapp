{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Contract = void 0;\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst depd_1 = __importDefault(require(\"depd\"));\n\nconst providers_1 = require(\"./providers\");\n\nconst errors_1 = require(\"./utils/errors\"); // Makes `function.name` return given name\n\n\nfunction nameFunction(name, body) {\n  return {\n    [name]() {\n      return body(...arguments);\n    }\n\n  }[name];\n}\n\nconst isUint8Array = x => x && x.byteLength !== undefined && x.byteLength === x.length;\n\nconst isObject = x => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\n\n\nclass Contract {\n  /**\n   * @param account NEAR account to sign change method transactions\n   * @param contractId NEAR account id where the contract is deployed\n   * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n   */\n  constructor(account, contractId, options) {\n    var _this = this;\n\n    this.account = account;\n    this.contractId = contractId;\n    const {\n      viewMethods = [],\n      changeMethods = []\n    } = options;\n    viewMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, async function () {\n          let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          if ((arguments.length <= 2 ? 0 : arguments.length - 2) || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n            throw new errors_1.PositionalArgsError();\n          }\n\n          return _this.account.viewFunction(_this.contractId, methodName, args, options);\n        })\n      });\n    });\n    changeMethods.forEach(methodName => {\n      Object.defineProperty(this, methodName, {\n        writable: false,\n        enumerable: true,\n        value: nameFunction(methodName, async function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n            throw new errors_1.PositionalArgsError();\n          }\n\n          if (args.length > 1 || !(args[0] && args[0].args)) {\n            const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n            deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n            return _this._changeMethod({\n              methodName,\n              args: args[0],\n              gas: args[1],\n              amount: args[2]\n            });\n          }\n\n          return _this._changeMethod({\n            methodName,\n            ...args[0]\n          });\n        })\n      });\n    });\n  }\n\n  async _changeMethod(_ref) {\n    let {\n      args,\n      methodName,\n      gas,\n      amount,\n      meta,\n      callbackUrl\n    } = _ref;\n    validateBNLike({\n      gas,\n      amount\n    });\n    const rawResult = await this.account.functionCall({\n      contractId: this.contractId,\n      methodName,\n      args,\n      gas,\n      attachedDeposit: amount,\n      walletMeta: meta,\n      walletCallbackUrl: callbackUrl\n    });\n    return providers_1.getTransactionLastResult(rawResult);\n  }\n\n}\n\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\n\nfunction validateBNLike(argMap) {\n  const bnLike = 'number, decimal string or BN';\n\n  for (const argName of Object.keys(argMap)) {\n    const argValue = argMap[argName];\n\n    if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n      throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n    }\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Contract","bn_js_1","require","depd_1","providers_1","errors_1","nameFunction","name","body","isUint8Array","x","byteLength","undefined","length","isObject","prototype","toString","call","constructor","account","contractId","options","viewMethods","changeMethods","forEach","methodName","writable","enumerable","args","PositionalArgsError","viewFunction","deprecate","default","_changeMethod","gas","amount","meta","callbackUrl","validateBNLike","rawResult","functionCall","attachedDeposit","walletMeta","walletCallbackUrl","getTransactionLastResult","argMap","bnLike","argName","keys","argValue","isBN","isNaN","ArgumentTypeError"],"sources":["C:/Projects/node_modules/near-api-js/lib/contract.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Contract = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst depd_1 = __importDefault(require(\"depd\"));\nconst providers_1 = require(\"./providers\");\nconst errors_1 = require(\"./utils/errors\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (args = {}, options = {}, ...ignored) => {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                })\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, async (...args) => {\n                    if (args.length && (args.length > 3 || !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new errors_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = depd_1.default('contract.methodName(args, gas, amount)');\n                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');\n                        return this._changeMethod({\n                            methodName,\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2]\n                        });\n                    }\n                    return this._changeMethod({ methodName, ...args[0] });\n                })\n            });\n        });\n    }\n    async _changeMethod({ args, methodName, gas, amount, meta, callbackUrl }) {\n        validateBNLike({ gas, amount });\n        const rawResult = await this.account.functionCall({\n            contractId: this.contractId,\n            methodName,\n            args,\n            gas,\n            attachedDeposit: amount,\n            walletMeta: meta,\n            walletCallbackUrl: callbackUrl\n        });\n        return providers_1.getTransactionLastResult(rawResult);\n    }\n}\nexports.Contract = Contract;\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !bn_js_1.default.isBN(argValue) && isNaN(argValue)) {\n            throw new errors_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,OAAO,GAAGR,eAAe,CAACS,OAAO,CAAC,OAAD,CAAR,CAA/B;;AACA,MAAMC,MAAM,GAAGV,eAAe,CAACS,OAAO,CAAC,MAAD,CAAR,CAA9B;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAMG,QAAQ,GAAGH,OAAO,CAAC,gBAAD,CAAxB,C,CACA;;;AACA,SAASI,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;EAC9B,OAAO;IACH,CAACD,IAAD,IAAgB;MACZ,OAAOC,IAAI,CAAC,YAAD,CAAX;IACH;;EAHE,EAILD,IAJK,CAAP;AAKH;;AACD,MAAME,YAAY,GAAIC,CAAD,IAAOA,CAAC,IAAIA,CAAC,CAACC,UAAF,KAAiBC,SAAtB,IAAmCF,CAAC,CAACC,UAAF,KAAiBD,CAAC,CAACG,MAAlF;;AACA,MAAMC,QAAQ,GAAIJ,CAAD,IAAOd,MAAM,CAACmB,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,CAA/B,MAAsC,iBAA9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMV,QAAN,CAAe;EACX;AACJ;AACA;AACA;AACA;EACIkB,WAAW,CAACC,OAAD,EAAUC,UAAV,EAAsBC,OAAtB,EAA+B;IAAA;;IACtC,KAAKF,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkBA,UAAlB;IACA,MAAM;MAAEE,WAAW,GAAG,EAAhB;MAAoBC,aAAa,GAAG;IAApC,IAA2CF,OAAjD;IACAC,WAAW,CAACE,OAAZ,CAAqBC,UAAD,IAAgB;MAChC7B,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B4B,UAA5B,EAAwC;QACpCC,QAAQ,EAAE,KAD0B;QAEpCC,UAAU,EAAE,IAFwB;QAGpC5B,KAAK,EAAEO,YAAY,CAACmB,UAAD,EAAa,kBAA+C;UAAA,IAAxCG,IAAwC,uEAAjC,EAAiC;UAAA,IAA7BP,OAA6B,uEAAnB,EAAmB;;UAC3E,IAAI,sDAAkB,EAAEP,QAAQ,CAACc,IAAD,CAAR,IAAkBnB,YAAY,CAACmB,IAAD,CAAhC,CAAlB,IAA6D,CAACd,QAAQ,CAACO,OAAD,CAA1E,EAAqF;YACjF,MAAM,IAAIhB,QAAQ,CAACwB,mBAAb,EAAN;UACH;;UACD,OAAO,KAAI,CAACV,OAAL,CAAaW,YAAb,CAA0B,KAAI,CAACV,UAA/B,EAA2CK,UAA3C,EAAuDG,IAAvD,EAA6DP,OAA7D,CAAP;QACH,CALkB;MAHiB,CAAxC;IAUH,CAXD;IAYAE,aAAa,CAACC,OAAd,CAAuBC,UAAD,IAAgB;MAClC7B,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B4B,UAA5B,EAAwC;QACpCC,QAAQ,EAAE,KAD0B;QAEpCC,UAAU,EAAE,IAFwB;QAGpC5B,KAAK,EAAEO,YAAY,CAACmB,UAAD,EAAa,kBAAmB;UAAA,kCAATG,IAAS;YAATA,IAAS;UAAA;;UAC/C,IAAIA,IAAI,CAACf,MAAL,KAAgBe,IAAI,CAACf,MAAL,GAAc,CAAd,IAAmB,EAAEC,QAAQ,CAACc,IAAI,CAAC,CAAD,CAAL,CAAR,IAAqBnB,YAAY,CAACmB,IAAI,CAAC,CAAD,CAAL,CAAnC,CAAnC,CAAJ,EAAuF;YACnF,MAAM,IAAIvB,QAAQ,CAACwB,mBAAb,EAAN;UACH;;UACD,IAAID,IAAI,CAACf,MAAL,GAAc,CAAd,IAAmB,EAAEe,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAArB,CAAvB,EAAmD;YAC/C,MAAMG,SAAS,GAAG5B,MAAM,CAAC6B,OAAP,CAAe,wCAAf,CAAlB;YACAD,SAAS,CAAC,iFAAD,CAAT;YACA,OAAO,KAAI,CAACE,aAAL,CAAmB;cACtBR,UADsB;cAEtBG,IAAI,EAAEA,IAAI,CAAC,CAAD,CAFY;cAGtBM,GAAG,EAAEN,IAAI,CAAC,CAAD,CAHa;cAItBO,MAAM,EAAEP,IAAI,CAAC,CAAD;YAJU,CAAnB,CAAP;UAMH;;UACD,OAAO,KAAI,CAACK,aAAL,CAAmB;YAAER,UAAF;YAAc,GAAGG,IAAI,CAAC,CAAD;UAArB,CAAnB,CAAP;QACH,CAfkB;MAHiB,CAAxC;IAoBH,CArBD;EAsBH;;EACkB,MAAbK,aAAa,OAAuD;IAAA,IAAtD;MAAEL,IAAF;MAAQH,UAAR;MAAoBS,GAApB;MAAyBC,MAAzB;MAAiCC,IAAjC;MAAuCC;IAAvC,CAAsD;IACtEC,cAAc,CAAC;MAAEJ,GAAF;MAAOC;IAAP,CAAD,CAAd;IACA,MAAMI,SAAS,GAAG,MAAM,KAAKpB,OAAL,CAAaqB,YAAb,CAA0B;MAC9CpB,UAAU,EAAE,KAAKA,UAD6B;MAE9CK,UAF8C;MAG9CG,IAH8C;MAI9CM,GAJ8C;MAK9CO,eAAe,EAAEN,MAL6B;MAM9CO,UAAU,EAAEN,IANkC;MAO9CO,iBAAiB,EAAEN;IAP2B,CAA1B,CAAxB;IASA,OAAOjC,WAAW,CAACwC,wBAAZ,CAAqCL,SAArC,CAAP;EACH;;AAzDU;;AA2DfzC,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACA;AACA;AACA;AACA;AACA;;AACA,SAASsC,cAAT,CAAwBO,MAAxB,EAAgC;EAC5B,MAAMC,MAAM,GAAG,8BAAf;;EACA,KAAK,MAAMC,OAAX,IAAsBnD,MAAM,CAACoD,IAAP,CAAYH,MAAZ,CAAtB,EAA2C;IACvC,MAAMI,QAAQ,GAAGJ,MAAM,CAACE,OAAD,CAAvB;;IACA,IAAIE,QAAQ,IAAI,CAAChD,OAAO,CAAC+B,OAAR,CAAgBkB,IAAhB,CAAqBD,QAArB,CAAb,IAA+CE,KAAK,CAACF,QAAD,CAAxD,EAAoE;MAChE,MAAM,IAAI5C,QAAQ,CAAC+C,iBAAb,CAA+BL,OAA/B,EAAwCD,MAAxC,EAAgDG,QAAhD,CAAN;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"script"}