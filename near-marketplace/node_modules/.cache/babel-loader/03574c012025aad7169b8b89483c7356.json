{"ast":null,"code":"/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n'use strict';\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors');\n\nvar setPrototypeOf = require('setprototypeof');\n\nvar statuses = require('statuses');\n\nvar inherits = require('inherits');\n\nvar toIdentifier = require('toidentifier');\n/**\n * Module exports.\n * @public\n */\n\n\nmodule.exports = createError;\nmodule.exports.HttpError = createHttpErrorConstructor();\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError); // Populate exports for all constructors\n\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError);\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\n\nfunction createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n      continue;\n    }\n\n    switch (typeof arg) {\n      case 'string':\n        msg = arg;\n        break;\n\n      case 'number':\n        status = arg;\n\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');\n        }\n\n        break;\n\n      case 'object':\n        props = arg;\n        break;\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !statuses[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  } // constructor\n\n\n  var HttpError = createError[status] || createError[codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || statuses[status]);\n    Error.captureStackTrace(err, createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\n\nfunction createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  inherits(HttpError, Error);\n  return HttpError;\n}\n/**\n * Create a constructor for a client error.\n * @private\n */\n\n\nfunction createClientErrorConstructor(HttpError, name, code) {\n  var className = toClassName(name);\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ClientError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ClientError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ClientError, HttpError);\n  nameFunc(ClientError, className);\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n  return ClientError;\n}\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\n\nfunction createIsHttpErrorFunction(HttpError) {\n  return function isHttpError(val) {\n    if (!val || typeof val !== 'object') {\n      return false;\n    }\n\n    if (val instanceof HttpError) {\n      return true;\n    }\n\n    return val instanceof Error && typeof val.expose === 'boolean' && typeof val.statusCode === 'number' && val.status === val.statusCode;\n  };\n}\n/**\n * Create a constructor for a server error.\n * @private\n */\n\n\nfunction createServerErrorConstructor(HttpError, name, code) {\n  var className = toClassName(name);\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg); // capture a stack trace to the construction point\n\n    Error.captureStackTrace(err, ServerError); // adjust the [[Prototype]]\n\n    setPrototypeOf(err, ServerError.prototype); // redefine the error message\n\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }); // redefine the error name\n\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n    return err;\n  }\n\n  inherits(ServerError, HttpError);\n  nameFunc(ServerError, className);\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n  return ServerError;\n}\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\n\nfunction nameFunc(func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name');\n\n  if (desc && desc.configurable) {\n    desc.value = name;\n    Object.defineProperty(func, 'name', desc);\n  }\n}\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\n\nfunction populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = toIdentifier(statuses[code]);\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code);\n        break;\n\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  }); // backwards-compatibility\n\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot, '\"I\\'mateapot\"; use \"ImATeapot\" instead');\n}\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\n\nfunction toClassName(name) {\n  return name.substr(-5) !== 'Error' ? name + 'Error' : name;\n}","map":{"version":3,"names":["deprecate","require","setPrototypeOf","statuses","inherits","toIdentifier","module","exports","createError","HttpError","createHttpErrorConstructor","isHttpError","createIsHttpErrorFunction","populateConstructorExports","codes","codeClass","status","Number","String","charAt","err","msg","props","i","arguments","length","arg","Error","statusCode","captureStackTrace","expose","key","TypeError","createClientErrorConstructor","name","code","className","toClassName","ClientError","message","prototype","Object","defineProperty","enumerable","configurable","value","writable","nameFunc","val","createServerErrorConstructor","ServerError","func","desc","getOwnPropertyDescriptor","forEach","forEachCode","CodeError","function","ImATeapot","substr"],"sources":["C:/Projects/node_modules/near-api-js/node_modules/http-errors/index.js"],"sourcesContent":["/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\nmodule.exports.isHttpError = createIsHttpErrorFunction(module.exports.HttpError)\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create function to test is a value is a HttpError.\n * @private\n */\n\nfunction createIsHttpErrorFunction (HttpError) {\n  return function isHttpError (val) {\n    if (!val || typeof val !== 'object') {\n      return false\n    }\n\n    if (val instanceof HttpError) {\n      return true\n    }\n\n    return val instanceof Error &&\n      typeof val.expose === 'boolean' &&\n      typeof val.statusCode === 'number' && val.status === val.statusCode\n  }\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = toClassName(name)\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n/**\n * Get a class name from a name identifier.\n * @private\n */\n\nfunction toClassName (name) {\n  return name.substr(-5) !== 'Error'\n    ? name + 'Error'\n    : name\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}